version: '3'

networks:
  producer-consumer-net:
  influxdb-net:
  grafana-net:
  spark-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.6.0.0/16
          gateway: 10.6.0.1
  kafka-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/16
          ip_range: 10.5.0.0/24
          gateway: 10.5.0.1
          aux_addresses:
            kafka: 10.5.0.2
            zookeeper: 10.5.0.3

services:
  app:
    container_name: app
    build:
      context: ./Application
      dockerfile: Api/Dockerfile
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      - KAFKA__BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA__DEFAULT_TOPIC=${KAFKA__DEFAULT_TOPIC}
    networks:
      - kafka-net
      - producer-consumer-net
    depends_on:
      - kafka
  zookeeper:
    image: "bitnami/zookeeper:latest"
    networks:
      - kafka-net
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:2.5.0
    networks:
      kafka-net:
      producer-consumer-net:
      spark-net:
          ipv4_address: 10.6.0.5
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=100
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    depends_on:
      - zookeeper

  spark-master:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080"
      - "7077:7077"
    environment:
      SPARK_RPC_AUTHENTICATION_ENABLED: no
      SPARK_RPC_ENCRYPTION_ENABLED: no
      SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no
      SPARK_SSL_ENABLED: no
      SPARK_MASTER_HOST: 10.6.0.4
    networks:
      producer-consumer-net:
      spark-net:
        ipv4_address: 10.6.0.4

  spark-worker:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://10.6.0.4:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 2g
      SPARK_MASTER_URL: spark://10.6.0.4:7077
    networks:
      spark-net:

  influxdb:
    container_name: influxdb
    image: influxdb:latest
    restart: unless-stopped
    environment:
      INFLUXDB_DB: ${INFLUXDB_DB}
      INFLUXDB_ADMIN_USER: ${INFLUXDB_USER}
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_PASSWORD}
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb
    networks:
      - influxdb-net
      - grafana-net
    depends_on:
      - kafka

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USERNAME}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    networks:
      - grafana-net
    depends_on:
      - app
      - kafka
      - influxdb

volumes:
  influxdb-data:
  grafana-data:
